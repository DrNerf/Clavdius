<Application x:Class="Clavdius.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Clavdius"
             StartupUri="Shell.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Theme/Monotone.Colors.xaml" />
                <ResourceDictionary Source="Theme/Monotone.Brushes.xaml" />
                <ResourceDictionary Source="Theme/Monotone.MahApps.xaml" />
                <ResourceDictionary Source="Theme/Monotone.xaml" />
                <ResourceDictionary Source="Theme/Monotone.ExtendedWPFToolkit.xaml" />
                <ResourceDictionary Source="Theme/Icons.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Button" x:Key="TransparentButton">
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThickness}" />
                <Setter Property="Padding" Value="7, 0, 7, 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="outerborder" CornerRadius="{DynamicResource ButtonCornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="True"  >
                                <Grid>
                                    <Border Name="glow" CornerRadius="{DynamicResource ButtonCornerRadius}" BorderThickness="{DynamicResource GlowBorderThickness}" BorderBrush="{DynamicResource ButtonGlowBrush}" Margin="{DynamicResource GlowBorderMargin}" Visibility="Collapsed" Effect="{DynamicResource ButtonHoverGlowEffect}" />
                                    <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource SelectedBrush}" />
                                    <Setter TargetName="glow" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressedBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource DarkerSelectedBrush}" />
                                    <Setter TargetName="glow" Property="Effect" Value="{DynamicResource ButtonPressedGlowEffect}" />
                                    <Setter TargetName="glow" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter TargetName="outerborder" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
